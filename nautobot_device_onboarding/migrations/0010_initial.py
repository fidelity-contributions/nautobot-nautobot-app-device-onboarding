# Generated by Django 4.2.16 on 2024-12-12 05:47

import uuid

import django.core.serializers.json
import django.db.models.deletion
import nautobot.core.models.fields
import nautobot.extras.models.mixins
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("dcim", "0062_module_data_migration"),
        ("ipam", "0047_alter_ipaddress_role_alter_ipaddress_status_and_more"),
        ("extras", "0114_computedfield_grouping"),
        ("nautobot_device_onboarding", "0009_remove_models"),
    ]

    operations = [
        migrations.CreateModel(
            name="OnboardingConfigSyncNetworkDataFromNetwork",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "_custom_field_data",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("preferred_config", models.BooleanField(default=False)),
                ("default_connectivity_test", models.BooleanField(default=False)),
                ("default_sync_vlans", models.BooleanField(default=False)),
                ("default_sync_vrfs", models.BooleanField(default=False)),
                ("default_sync_cables", models.BooleanField(default=False)),
                ("sync_vlans_location_type", models.CharField(default="single_location", max_length=50)),
                (
                    "default_interface_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="extras.status",
                    ),
                ),
                (
                    "default_ip_address_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="extras.status",
                    ),
                ),
                (
                    "default_namespace",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sync_network_data_onboarding_configs",
                        to="ipam.namespace",
                    ),
                ),
                (
                    "default_prefix_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="extras.status",
                    ),
                ),
                ("tags", nautobot.core.models.fields.TagsField(through="extras.TaggedItem", to="extras.Tag")),
            ],
            options={
                "verbose_name": "Onboarding Configs - Sync Devices",
            },
            bases=(
                nautobot.extras.models.mixins.DynamicGroupMixin,
                nautobot.extras.models.mixins.NotesMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="OnboardingConfigSyncDevices",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "_custom_field_data",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("preferred_config", models.BooleanField(default=False)),
                ("default_port", models.IntegerField(blank=True, null=True)),
                ("default_timeout", models.IntegerField(blank=True, null=True)),
                (
                    "default_device_role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sync_devices_onboarding_configs",
                        to="extras.role",
                    ),
                ),
                (
                    "default_device_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="extras.status",
                    ),
                ),
                (
                    "default_interface_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="extras.status",
                    ),
                ),
                (
                    "default_ip_address_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="extras.status",
                    ),
                ),
                (
                    "default_namespace",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sync_devices_onboarding_configs",
                        to="ipam.namespace",
                    ),
                ),
                (
                    "default_platform",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to="dcim.platform"
                    ),
                ),
                (
                    "default_secrets_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sync_devices_onboarding_configs",
                        to="extras.secretsgroup",
                    ),
                ),
                ("tags", nautobot.core.models.fields.TagsField(through="extras.TaggedItem", to="extras.Tag")),
            ],
            options={
                "verbose_name": "Onboarding Configs - Sync Devices",
            },
            bases=(
                nautobot.extras.models.mixins.DynamicGroupMixin,
                nautobot.extras.models.mixins.NotesMixin,
                models.Model,
            ),
        ),
    ]
